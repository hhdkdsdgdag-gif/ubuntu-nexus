name: Nexus CLI (4 nodes, persist state)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */5 * * *"   # chạy mỗi 5 giờ để kịp backup trước mốc 6h

permissions:
  contents: read
  actions: read

env:
  NODE_IDS: "35976140 35976141 35846064 35846065"
  LOG_MAX_MB: "50"  # giới hạn log trong snapshot (MB)

jobs:
  nexus:
    runs-on: ubuntu-latest
    timeout-minutes: 355   # < 6h để còn thời gian upload state

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Tải state cũ (nếu có) - best-effort
      - name: Download previous state artifact (best-effort)
        uses: dawidd6/action-download-artifact@v6
        continue-on-error: true
        with:
          name: nexus-state
          path: /tmp/nexus-state
          if_no_artifact_found: ignore
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore state (if present)
        shell: bash
        run: |
          set -euxo pipefail
          sudo mkdir -p /opt/state
          sudo chown -R "$USER:$USER" /opt/state
          # ~/.nexus
          if [ -f /tmp/nexus-state/home-runner-nexus.tar.gz ]; then
            tar -xzf /tmp/nexus-state/home-runner-nexus.tar.gz -C "$HOME"
          fi
          # /opt/state
          if [ -f /tmp/nexus-state/opt-state.tar.gz ]; then
            sudo tar -xzf /tmp/nexus-state/opt-state.tar.gz -C /
            sudo chown -R "$USER:$USER" /opt/state
          fi
          mkdir -p /opt/state/logs

      - name: Prepare system
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y tmux curl rsync

      # 2) Cài Nexus CLI
      - name: Install Nexus CLI
        shell: bash
        run: |
          set -euxo pipefail
          curl https://cli.nexus.xyz/ | sh
          echo "$HOME/.nexus/bin" >> "$GITHUB_PATH"

      # 3) Script chạy node (shebang ở cột 1)
      - name: Ensure start script exists
        shell: bash
        run: |
          set -euxo pipefail
          install -d -m 755 /opt/state /opt/state/logs
          cat <<'SCRIPT' | sed 's/^[[:space:]]*//' > /opt/state/start-nexus.sh
            #!/usr/bin/env bash
            set -euo pipefail

            NODE_ID="$1"
            LOG_DIR="/opt/state/logs"
            mkdir -p "$LOG_DIR"

            export PATH="$HOME/.nexus/bin:$PATH"
            command -v nexus-network && nexus-network --version || true

            while true; do
              echo "[$(date -Is)] starting node ${NODE_ID}"
              nexus-network start --node-id "${NODE_ID}" 2>&1 | tee -a "${LOG_DIR}/node${NODE_ID}.log"
              echo "[$(date -Is)] node ${NODE_ID} exited, restart in 15s..."
              sleep 15
            done
          SCRIPT
          chmod +x /opt/state/start-nexus.sh
          head -n 20 /opt/state/start-nexus.sh

      # 4) Khởi chạy 4 node trong 4 phiên tmux (socket riêng 'nexus' để tránh lệch version)
      - name: Start 4 Nexus nodes in tmux
        shell: bash
        run: |
          set -euxo pipefail
          for ID in $NODE_IDS; do
            tmux -L nexus has-session -t "node${ID}" 2>/dev/null && tmux -L nexus kill-session -t "node${ID}" || true
          done
          for ID in $NODE_IDS; do
            tmux -L nexus new-session -d -s "node${ID}" "/opt/state/start-nexus.sh ${ID}"
          done
          tmux -L nexus ls || true

      # 5) SSH debug: chạy khi workflow_dispatch; bật ở cron bằng repo variable ENABLE_TMATE=1 nếu cần
      - name: Open tmate (debug)
        if: ${{ github.event_name == 'workflow_dispatch' || vars.ENABLE_TMATE == '1' }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: false

      # 6) Chạy ~5h50', còn ~5' cuối để snapshot & upload
      - name: Let it run
        shell: bash
        run: |
          sleep $((5*60*60 + 50*60))

      # 7) Snapshot + nén state (rsync; giới hạn log)
      - name: Create state archives
        if: always()
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p /tmp/state-bundle

          # ~/.nexus (nếu có)
          if [ -d "$HOME/.nexus" ]; then
            tar -czf /tmp/state-bundle/home-runner-nexus.tar.gz -C "$HOME" .nexus
          fi

          # /opt/state → snapshot ổn định bằng rsync
          if [ -d /opt/state ]; then
            SNAP=/tmp/snap/opt/state
            mkdir -p "$SNAP"
            rsync -a --delete /opt/state/ "$SNAP/"

            # Giới hạn kích thước log trong snapshot (mặc định 50MB)
            MAX_MB=${LOG_MAX_MB:-50}
            MAX_BYTES=$((MAX_MB*1024*1024))
            find "$SNAP/logs" -type f -name 'node*.log' 2>/dev/null | while read -r f; do
              SZ=$(stat -c%s "$f" 2>/dev/null || echo 0)
              if [ "$SZ" -gt "$MAX_BYTES" ]; then
                tail -c "$MAX_BYTES" "$f" > "$f.tmp" && mv "$f.tmp" "$f"
              fi
            done

            # Nén snapshot; restore -C / sẽ bung về /opt/state
            sudo tar -czf /tmp/state-bundle/opt-state.tar.gz -C /tmp/snap opt/state
            sudo chown "$USER:$USER" /tmp/state-bundle/opt-state.tar.gz
          fi

      - name: Upload state artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nexus-state
          path: /tmp/state-bundle
          retention-days: 14
